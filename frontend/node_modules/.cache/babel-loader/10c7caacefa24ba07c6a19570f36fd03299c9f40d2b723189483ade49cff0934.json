{"ast":null,"code":"var _jsxFileName = \"/Users/burakgolec/Documents/Programing/React/Web-post/social-media-app/src/pages/DockerStatus/DockerStatus.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchContainers } from \"../../services/api\";\nimport \"./DockerStatus.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DockerStatus = () => {\n  _s();\n  const [containers, setContainers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getContainers = async () => {\n      try {\n        const response = await fetchContainers();\n        const containerArray = Array.isArray(response) ? response : [];\n        setContainers(containerArray);\n        setError(null);\n      } catch (err) {\n        setError(\"Docker konteynerları yüklenirken bir hata oluştu.\");\n        console.error(\"Docker API Hatası:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getContainers();\n    const interval = setInterval(getContainers, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  const formatUptime = status => {\n    return status.replace(\"Up \", \"\");\n  };\n  const formatCreatedTime = timestamp => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleString('tr-TR');\n  };\n  const formatPorts = ports => {\n    if (!ports || ports.length === 0) return \"Yok\";\n    return ports.filter(p => p.PublicPort).map(p => `${p.PublicPort}:${p.PrivatePort}`).join(\", \");\n  };\n  const getNetworkInfo = networkSettings => {\n    if (!networkSettings.Networks) return \"Yok\";\n    const network = Object.values(networkSettings.Networks)[0];\n    return network.IPAddress || \"Yok\";\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"docker-status-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Konteyner bilgileri y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"docker-status-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"docker-status-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"docker-status-title\",\n      children: \"Docker Konteyner Durumu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containers-grid\",\n      children: containers.map(container => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `container-card ${container.State.toLowerCase()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: container.Names[0].replace(\"/\", \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-badge ${container.State.toLowerCase()}`,\n            children: container.State\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 18\n            }, this), \" \", container.Id.slice(0, 12)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 18\n            }, this), \" \", container.Image]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ports:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 18\n            }, this), \" \", formatPorts(container.Ports)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Olu\\u015Fturulma:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 18\n            }, this), \" \", formatCreatedTime(container.Created)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\xC7al\\u0131\\u015Fma S\\xFCresi:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 18\n            }, this), \" \", formatUptime(container.Status)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"IP Adresi:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 18\n            }, this), \" \", getNetworkInfo(container.NetworkSettings)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Network:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 18\n            }, this), \" \", container.HostConfig.NetworkMode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, container.Id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(DockerStatus, \"DqeUmGa8pN+Zfv/R/vKehCe3SGA=\");\n_c = DockerStatus;\nexport default DockerStatus;\nvar _c;\n$RefreshReg$(_c, \"DockerStatus\");","map":{"version":3,"names":["React","useState","useEffect","fetchContainers","jsxDEV","_jsxDEV","DockerStatus","_s","containers","setContainers","loading","setLoading","error","setError","getContainers","response","containerArray","Array","isArray","err","console","interval","setInterval","clearInterval","formatUptime","status","replace","formatCreatedTime","timestamp","date","Date","toLocaleString","formatPorts","ports","length","filter","p","PublicPort","map","PrivatePort","join","getNetworkInfo","networkSettings","Networks","network","Object","values","IPAddress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","container","State","toLowerCase","Names","Id","slice","Image","Ports","Created","Status","NetworkSettings","HostConfig","NetworkMode","_c","$RefreshReg$"],"sources":["/Users/burakgolec/Documents/Programing/React/Web-post/social-media-app/src/pages/DockerStatus/DockerStatus.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchContainers } from \"../../services/api\";\nimport \"./DockerStatus.css\";\n\nconst DockerStatus = () => {\n  const [containers, setContainers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getContainers = async () => {\n      try {\n        const response = await fetchContainers();\n        const containerArray = Array.isArray(response) ? response : [];\n        setContainers(containerArray);\n        setError(null);\n      } catch (err) {\n        setError(\"Docker konteynerları yüklenirken bir hata oluştu.\");\n        console.error(\"Docker API Hatası:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getContainers();\n    const interval = setInterval(getContainers, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const formatUptime = (status) => {\n    return status.replace(\"Up \", \"\");\n  };\n\n  const formatCreatedTime = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleString('tr-TR');\n  };\n\n  const formatPorts = (ports) => {\n    if (!ports || ports.length === 0) return \"Yok\";\n    return ports\n      .filter(p => p.PublicPort)\n      .map(p => `${p.PublicPort}:${p.PrivatePort}`).join(\", \");\n  };\n\n  const getNetworkInfo = (networkSettings) => {\n    if (!networkSettings.Networks) return \"Yok\";\n    const network = Object.values(networkSettings.Networks)[0];\n    return network.IPAddress || \"Yok\";\n  };\n\n  if (loading) {\n    return (\n      <div className=\"docker-status-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Konteyner bilgileri yükleniyor...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div className=\"docker-status-error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"docker-status-container\">\n      <h1 className=\"docker-status-title\">Docker Konteyner Durumu</h1>\n      <div className=\"containers-grid\">\n        {containers.map((container) => (\n          <div key={container.Id} className={`container-card ${container.State.toLowerCase()}`}>\n            <div className=\"container-header\">\n              <h2>{container.Names[0].replace(\"/\", \"\")}</h2>\n              <span className={`status-badge ${container.State.toLowerCase()}`}>\n                {container.State}\n              </span>\n            </div>\n            <div className=\"container-details\">\n              <p><strong>ID:</strong> {container.Id.slice(0, 12)}</p>\n              <p><strong>Image:</strong> {container.Image}</p>\n              <p><strong>Ports:</strong> {formatPorts(container.Ports)}</p>\n              <p><strong>Oluşturulma:</strong> {formatCreatedTime(container.Created)}</p>\n              <p><strong>Çalışma Süresi:</strong> {formatUptime(container.Status)}</p>\n              <p><strong>IP Adresi:</strong> {getNetworkInfo(container.NetworkSettings)}</p>\n              <p><strong>Network:</strong> {container.HostConfig.NetworkMode}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DockerStatus; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}