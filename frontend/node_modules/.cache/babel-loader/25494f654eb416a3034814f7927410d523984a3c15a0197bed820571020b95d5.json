{"ast":null,"code":"var _jsxFileName = \"/Users/burakgolec/Documents/Programing/React/Web-post/social-media-app/src/pages/DockerStatus/DockerStatus.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./DockerStatus.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DockerStatus = () => {\n  _s();\n  const [containers, setContainers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchContainers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5001/containers\");\n        setContainers(response.data);\n        setError(null);\n      } catch (err) {\n        setError(\"Konteyner bilgileri yüklenirken bir hata oluştu.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchContainers();\n    const interval = setInterval(fetchContainers, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  const formatUptime = status => {\n    return status.replace(\"Up \", \"\");\n  };\n  const formatCreatedTime = timestamp => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleString('tr-TR');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"docker-status-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Konteyner bilgileri y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"docker-status-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"docker-status-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"docker-status-title\",\n      children: \"Docker Konteyner Durumu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containers-grid\",\n      children: containers.map(container => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `container-card ${container.State.toLowerCase()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: container.Names[0].replace(\"/\", \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-badge ${container.State.toLowerCase()}`,\n            children: container.State\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 18\n            }, this), \" \", container.Id.slice(0, 12)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 18\n            }, this), \" \", container.Image]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ports:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 18\n            }, this), \" \", container.Ports.map(p => `${p.PublicPort}:${p.PrivatePort}`).join(\", \")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Olu\\u015Fturulma:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 18\n            }, this), \" \", formatCreatedTime(container.Created)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\xC7al\\u0131\\u015Fma S\\xFCresi:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 18\n            }, this), \" \", formatUptime(container.Status)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Network:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 18\n            }, this), \" \", container.HostConfig.NetworkMode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, container.Id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(DockerStatus, \"DqeUmGa8pN+Zfv/R/vKehCe3SGA=\");\n_c = DockerStatus;\nexport default DockerStatus;\nvar _c;\n$RefreshReg$(_c, \"DockerStatus\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DockerStatus","_s","containers","setContainers","loading","setLoading","error","setError","fetchContainers","response","get","data","err","interval","setInterval","clearInterval","formatUptime","status","replace","formatCreatedTime","timestamp","date","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","container","State","toLowerCase","Names","Id","slice","Image","Ports","p","PublicPort","PrivatePort","join","Created","Status","HostConfig","NetworkMode","_c","$RefreshReg$"],"sources":["/Users/burakgolec/Documents/Programing/React/Web-post/social-media-app/src/pages/DockerStatus/DockerStatus.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./DockerStatus.css\";\n\nconst DockerStatus = () => {\n  const [containers, setContainers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchContainers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5001/containers\");\n        setContainers(response.data);\n        setError(null);\n      } catch (err) {\n        setError(\"Konteyner bilgileri yüklenirken bir hata oluştu.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchContainers();\n    const interval = setInterval(fetchContainers, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const formatUptime = (status) => {\n    return status.replace(\"Up \", \"\");\n  };\n\n  const formatCreatedTime = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleString('tr-TR');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"docker-status-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Konteyner bilgileri yükleniyor...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div className=\"docker-status-error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"docker-status-container\">\n      <h1 className=\"docker-status-title\">Docker Konteyner Durumu</h1>\n      <div className=\"containers-grid\">\n        {containers.map((container) => (\n          <div key={container.Id} className={`container-card ${container.State.toLowerCase()}`}>\n            <div className=\"container-header\">\n              <h2>{container.Names[0].replace(\"/\", \"\")}</h2>\n              <span className={`status-badge ${container.State.toLowerCase()}`}>\n                {container.State}\n              </span>\n            </div>\n            <div className=\"container-details\">\n              <p><strong>ID:</strong> {container.Id.slice(0, 12)}</p>\n              <p><strong>Image:</strong> {container.Image}</p>\n              <p><strong>Ports:</strong> {container.Ports.map(p => \n                `${p.PublicPort}:${p.PrivatePort}`).join(\", \")}</p>\n              <p><strong>Oluşturulma:</strong> {formatCreatedTime(container.Created)}</p>\n              <p><strong>Çalışma Süresi:</strong> {formatUptime(container.Status)}</p>\n              <p><strong>Network:</strong> {container.HostConfig.NetworkMode}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DockerStatus; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}