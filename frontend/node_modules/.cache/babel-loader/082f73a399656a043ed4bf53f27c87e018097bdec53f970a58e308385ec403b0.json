{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5002\"\n});\nAPI.interceptors.response.use(response => response.data, error => {\n  console.error(\"API Hatası:\", error);\n  return Promise.reject(error);\n});\nexport const fetchPosts = () => API.get(\"/posts\");\nexport const createPost = post => API.post(\"/posts\", post);\nexport const likePost = (id, updatedPost) => API.put(`/posts/${id}`, updatedPost);\nexport const addComment = (postId, comment) => API.put(`/posts/${postId}`, {\n  comment\n});\nexport const fetchContainers = () => API.get(\"/containers\");\nexport const fetchDocumentation = async () => {\n  try {\n    const response = await fetch(\"http://localhost:5002/documentation\");\n    if (!response.ok) {\n      throw new Error(\"Dokümantasyon verileri yüklenemedi.\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error(`Dokümantasyon hatası: ${error.message}`);\n  }\n};","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","response","use","data","error","console","Promise","reject","fetchPosts","get","createPost","post","likePost","id","updatedPost","put","addComment","postId","comment","fetchContainers","fetchDocumentation","fetch","ok","Error","json","message"],"sources":["/Users/burakgolec/Documents/Programing/React/Web-post/social-media-app/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API = axios.create({ baseURL: \"http://localhost:5002\" });\n\nAPI.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    console.error(\"API Hatası:\", error);\n    return Promise.reject(error);\n  }\n);\n\nexport const fetchPosts = () => API.get(\"/posts\");\nexport const createPost = (post) => API.post(\"/posts\", post);\nexport const likePost = (id, updatedPost) => API.put(`/posts/${id}`, updatedPost);\nexport const addComment = (postId, comment) =>\n  API.put(`/posts/${postId}`, { comment });\n\nexport const fetchContainers = () => API.get(\"/containers\");\n\nexport const fetchDocumentation = async () => {\n  try {\n    const response = await fetch(\"http://localhost:5002/documentation\");\n    \n    if (!response.ok) {\n      throw new Error(\"Dokümantasyon verileri yüklenemedi.\");\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error(`Dokümantasyon hatası: ${error.message}`);\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAAwB,CAAC,CAAC;AAE9DF,GAAG,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,CAACE,IAAI,EAC1BC,KAAK,IAAK;EACTC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;EACnC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMI,UAAU,GAAGA,CAAA,KAAMX,GAAG,CAACY,GAAG,CAAC,QAAQ,CAAC;AACjD,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAKd,GAAG,CAACc,IAAI,CAAC,QAAQ,EAAEA,IAAI,CAAC;AAC5D,OAAO,MAAMC,QAAQ,GAAGA,CAACC,EAAE,EAAEC,WAAW,KAAKjB,GAAG,CAACkB,GAAG,CAAC,UAAUF,EAAE,EAAE,EAAEC,WAAW,CAAC;AACjF,OAAO,MAAME,UAAU,GAAGA,CAACC,MAAM,EAAEC,OAAO,KACxCrB,GAAG,CAACkB,GAAG,CAAC,UAAUE,MAAM,EAAE,EAAE;EAAEC;AAAQ,CAAC,CAAC;AAE1C,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAMtB,GAAG,CAACY,GAAG,CAAC,aAAa,CAAC;AAE3D,OAAO,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMoB,KAAK,CAAC,qCAAqC,CAAC;IAEnE,IAAI,CAACpB,QAAQ,CAACqB,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IACxD;IAEA,MAAMpB,IAAI,GAAG,MAAMF,QAAQ,CAACuB,IAAI,CAAC,CAAC;IAClC,OAAOrB,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAImB,KAAK,CAAC,yBAAyBnB,KAAK,CAACqB,OAAO,EAAE,CAAC;EAC3D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}